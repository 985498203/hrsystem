<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans        
	http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security       
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- http部分配置如何拦截用户请求。 auto-config='true'将自动配置几种常用的权限控制机制，包括form, anonymous, 
		rememberMe use-expressions="false":关闭SpringEL表达式 hasAnyRole("","") hasRole("") 
		or hasRole("") 不关闭的话需要使用hasRole("")表达式，然后中间以or连接 -->
	<http auto-config="true" use-expressions="false">
		<!-- 禁用csrf令牌 -->
		<csrf disabled="true" />
		<!-- 设置URL权限 -->
		<!-- 此处权限的名称必须以ROLE_作为前缀 -->
		<!-- 登录页面可以匿名访问 -->
		<intercept-url pattern="/login.jsp"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<!-- admin目录下的资源需要ADMIN或DB权限 -->
		<intercept-url pattern="/admin/**"
			access="ROLE_ADMIN,ROLE_DB" />
		<!-- db目录下的资源需要DB权限 -->
		<intercept-url pattern="/sys/**" access="ROLE_SYS" />
		<!-- 其他目录下的需要USER权限才能访问 -->
		<intercept-url pattern="/**" access="ROLE_USER" />
		<!--使用自带的登录表单 -->
		<form-login login-page="/login.jsp"
			
			password-parameter="password" username-parameter="username"
			authentication-failure-url="/login.jsp?error=-1"
			authentication-success-forward-url="/index.jsp" />
		<logout logout-url="/logout"/>
	</http>
	
	
	


	<!-- <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"> 
		</beans:bean> -->
	<!--认证管理器 -->
	<!-- <authentication-manager> <authentication-provider> <user-service> 创建一个用户，用户名为admin，密码admin，分配ROLE_USER、ROLE_ADMIN两个角色 
		<user name="admin" password="admin" authorities="ROLE_USER,ROLE_ADMIN" /> 
		创建一个用户，用户名为user，密码user，分配ROLE_USER角色 <user name="user" password="user" authorities="ROLE_USER" 
		/> 创建一个用户名为bd，密码bd，分配ROLE_DB,ROLE_ADMIN,ROLE_USER三个角色 <user name="db" password="db" 
		authorities="ROLE_DB,ROLE_ADMIN,ROLE_USER" /> </user-service> </authentication-provider> 
		</authentication-manager> -->

	<!-- 注册AuthenticationManager为应用程序提供身份验证服务 -->
	<!-- <authentication-manager>
		<authentication-provider>
			使用数据库管理用户权限 users-by-username-query:用于在给定用户名的情况下查询用户名，密码和启用状态 authorities-by-username-query: 
				用于在给定用户名的情况下查询用户的组权限
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select u_username username,u_password password, u_enabled enabled from T_USERS where u_username=?"
				authorities-by-username-query="select r_username username, r_role role from T_USER_ROLES where r_username=?" />
		</authentication-provider>
	</authentication-manager> -->
	
	<!-- 设置数据源 -->
	<!-- <beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<beans:property name="username" value="scott" />
		<beans:property name="password" value="tiger" />
	</beans:bean> -->
	
	<authentication-manager>
		<authentication-provider user-service-ref="myUserDetailsService">
		</authentication-provider>
	</authentication-manager>
	
	<!-- 认证类 -->
<!-- 	<beans:bean id="myUserDetailsService" class="com.hxzy.spring.springsecurity.springsecurity.MyUserDetailsService"></beans:bean>
 -->

</beans:beans>
